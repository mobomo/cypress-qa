version: 2.1
orbs:
  docker: circleci/docker@1.5.0
  aws-cli: circleci/aws-cli@1.3.0

jobs:
  test:
    docker:
      - image: cypress/included:8.2.0
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            npm install
      - run:
          name: Run tests
          command: |
            npm run ci:test
      - store_test_results:
          path:
            test-results
      - store_artifacts:
          path:
            cypress/videos
      - store_artifacts:
          path:
            cypress/screenshots

  build:
    docker:
      - image: docker:git
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_ACCESS_TOKEN
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Login to DockerHub
          command: |
            echo $DOCKERHUB_ACCESS_TOKEN | docker login -u $DOCKERHUB_USERNAME --password-stdin
      - run:
          name: Build dockerfile
          command: |
            docker build --progress plain -f ./docker-src/Dockerfile --target release -t mobomo/cypress .
            docker push mobomo/cypress:latest
            docker build --progress plain -f ./docker-src/Dockerfile --target xpra -t mobomo/cypress:xpra .
            docker push mobomo/cypress:xpra
  docs-build:
    docker:
      - image: cimg/node:14.16.0
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            npm install
      - run:
          name: Build docs
          command: |
            npm run docs
      - persist_to_workspace:
          root: "./"
          paths:
            - "docs/"
  docs-push:
    executor: aws-cli/default
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - aws-cli/setup
      - run:
          name: Build docs
          command: |
            npm install
      - run:
          name: Push to S3
          command: |
            aws s3 sync /tmp/workspace/docs s3://qa.mobomo.net/docs --delete
            aws cloudfront create-invalidation --distribution-id EMSVABI8DR6KJ --paths "/docs"

workflows:
  version: 2
  commit:
    jobs:
      - test:
          context: cypress-dockerhub
  build:
    jobs:
      - approve-build:
          type: approval
          filters:
            branches:
              only:
                - master
      - build:
          context: cypress-dockerhub
          requires:
            - approve-build
      - approve-docs:
          type: approval
          filters:
            branches:
              only:
                - master
      - docs-build:
          requires:
            - approve-docs
      - docs-push:
          context: cypress-docs
          requires:
              - docs-build